import { __assign, __extends } from "tslib";
import { Config } from '@amplitude/analytics-core';
import { Http } from './transports/http';
var NodeConfig = /** @class */ (function (_super) {
    __extends(NodeConfig, _super);
    function NodeConfig(apiKey, options) {
        var _a;
        var storageProvider = options === null || options === void 0 ? void 0 : options.storageProvider;
        var transportProvider = (_a = options === null || options === void 0 ? void 0 : options.transportProvider) !== null && _a !== void 0 ? _a : new Http();
        return _super.call(this, __assign(__assign({}, options), { apiKey: apiKey, storageProvider: storageProvider, transportProvider: transportProvider })) || this;
    }
    return NodeConfig;
}(Config));
export { NodeConfig };
export var useNodeConfig = function (apiKey, overrides) {
    return new NodeConfig(apiKey, overrides);
};
//# sourceMappingURL=config.js.map